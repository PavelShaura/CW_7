name: Build and deploy workflow
on: [push]
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: docker build
        run: docker build -t pshaura/todolist_project:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker login
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: docker push
        run: docker push pshaura/todolist_project:$GITHUB_REF_NAME-$GITHUB_RUN_ID
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG_MODE: ${{ secrets.DEBUG_MODE }}
      DB_ENGINE: ${{ secrets.DB_ENGINE }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      VK_OAUTH2_KEY: ${{ secrets.VK_OAUTH2_KEY }}
      VK_OAUTH2_SECRET: ${{ secrets.VK_OAUTH2_SECRET }}
      TG_TOKEN: ${{ secrets.TG_TOKEN }}
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: render docker-compose
        run:  | 
          mkdir deploy
          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
          cat .ci-env | envsubst > deploy/.env
      - name: copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.KEY }}
          source: "deploy/docker-compose.yaml,deploy/.env"
          target: "todolist"
          strip_components: 1
      - name: deploy app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.KEY }}
          script: |
            cd todolist
            echo ${{ secrets.SERVER_PASSWORD }} | docker-compose up -d